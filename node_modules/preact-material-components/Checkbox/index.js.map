{"version":3,"sources":["../esm/Checkbox/index.js"],"names":["Checkbox","arguments","componentName","mdcProps","mdcNotifyProps","control","MDComponent","MDCCheckbox","afterComponentDidMount","destroy","allprops","ref","setControlRef","Object","assign","type","className","version","xmlns","viewBox","fill","stroke","d","MaterialComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;IACaA,Q;;;;;AACT,sBAAc;AAAA;;AAAA;AACV,+GAASC,SAAT;AACA,UAAKC,aAAL,GAAqB,UAArB;AACA,UAAKC,QAAL,GAAgB,CAAC,UAAD,CAAhB;AACA,UAAKC,cAAL,GAAsB,CAAC,SAAD,EAAY,eAAZ,EAA6B,UAA7B,CAAtB;AAJU;AAKb;;;;wCACmB;AAChB;;AACA,UAAI,KAAKC,OAAT,EAAkB;AACd,aAAKC,WAAL,GAAmB,IAAIC,qBAAJ,CAAgB,KAAKF,OAArB,CAAnB;AACH;;AACD,WAAKG,sBAAL;AACH;;;2CACsB;AACnB;;AACA,UAAI,KAAKF,WAAT,EAAsB;AAClB,aAAKA,WAAL,CAAiBG,OAAjB;AACH;AACJ;;;gCACWC,Q,EAAU;AAClB,aAAQ,eAAE,KAAF,EAAS;AAAEC,QAAAA,GAAG,EAAE,KAAKC;AAAZ,OAAT,EACJ,eAAE,OAAF,EAAWC,MAAM,CAACC,MAAP,CAAc;AAAEC,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,SAAS,EAAE;AAA/B,OAAd,EAA+EN,QAA/E,CAAX,CADI,EAEJ,eAAE,KAAF,EAAS;AAAEM,QAAAA,SAAS,EAAE;AAAb,OAAT,EACI,eAAE,KAAF,EAAS;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBD,QAAAA,SAAS,EAAE,yBAA7B;AAAwDE,QAAAA,KAAK,EAAE,4BAA/D;AAA6FC,QAAAA,OAAO,EAAE;AAAtG,OAAT,EACI,eAAE,MAAF,EAAU;AAAEH,QAAAA,SAAS,EAAE,8BAAb;AAA6CI,QAAAA,IAAI,EAAE,MAAnD;AAA2DC,QAAAA,MAAM,EAAE,OAAnE;AAA4EC,QAAAA,CAAC,EAAE;AAA/E,OAAV,CADJ,CADJ,EAGI,eAAE,KAAF,EAAS;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAT,CAHJ,CAFI,CAAR;AAMH;;;EA3ByBO,2B;;;eA6BfvB,Q","sourcesContent":["import { MDCCheckbox } from '@material/checkbox/';\nimport { h } from 'preact';\nimport MaterialComponent from '../Base/MaterialComponent';\nexport class Checkbox extends MaterialComponent {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'checkbox';\n        this.mdcProps = ['disabled'];\n        this.mdcNotifyProps = ['checked', 'indeterminate', 'disabled'];\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        if (this.control) {\n            this.MDComponent = new MDCCheckbox(this.control);\n        }\n        this.afterComponentDidMount();\n    }\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        if (this.MDComponent) {\n            this.MDComponent.destroy();\n        }\n    }\n    materialDom(allprops) {\n        return (h(\"div\", { ref: this.setControlRef },\n            h(\"input\", Object.assign({ type: \"checkbox\", className: \"mdc-checkbox__native-control\" }, allprops)),\n            h(\"div\", { className: \"mdc-checkbox__background\" },\n                h(\"svg\", { version: \"1.1\", className: \"mdc-checkbox__checkmark\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\" },\n                    h(\"path\", { className: \"mdc-checkbox__checkmark-path\", fill: \"none\", stroke: \"white\", d: \"M1.73,12.91 8.1,19.28 22.79,4.59\" })),\n                h(\"div\", { className: \"mdc-checkbox__mixedmark\" }))));\n    }\n}\nexport default Checkbox;\n//# sourceMappingURL=index.js.map"],"file":"index.js"}