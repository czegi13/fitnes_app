{"version":3,"sources":["../esm/Snackbar/index.js"],"names":["shallowDiffers","a","b","i","Snackbar","arguments","componentName","mdcProps","control","MDComponent","MDCSnackbar","props","dismissesOnAction","undefined","destroy","state","Object","assign","ref","setControlRef","className","type","MaterialComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;AACA,SAASA,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AAC1B,OAAK,IAAMC,CAAX,IAAgBF,CAAhB,EAAmB;AACf,QAAI,EAAEE,CAAC,IAAID,CAAP,CAAJ,EAAe;AACX,aAAO,IAAP;AACH;AACJ;;AACD,OAAK,IAAMC,EAAX,IAAgBD,CAAhB,EAAmB;AACf;AACA,QAAID,CAAC,CAACE,EAAD,CAAD,KAASD,CAAC,CAACC,EAAD,CAAd,EAAmB;AACf,aAAO,IAAP;AACH;AACJ;;AACD,SAAO,KAAP;AACH;;IACYC,Q;;;;;AACT,sBAAc;AAAA;;AAAA;AACV,+GAASC,SAAT;AACA,UAAKC,aAAL,GAAqB,UAArB;AACA,UAAKC,QAAL,GAAgB,EAAhB;AAHU;AAIb;;;;wCACmB;AAChB;;AACA,UAAI,KAAKC,OAAT,EAAkB;AACd,aAAKC,WAAL,GAAmB,IAAIC,qBAAJ,CAAgB,KAAKF,OAArB,CAAnB;;AACA,YAAI,KAAKG,KAAL,CAAWC,iBAAX,KAAiCC,SAAjC,IACA,KAAKF,KAAL,CAAWC,iBAAX,KAAiC,IADrC,EAC2C;AACvC,eAAKH,WAAL,CAAiBG,iBAAjB,GAAqC,IAArC;AACH,SAHD,MAIK;AACD,eAAKH,WAAL,CAAiBG,iBAAjB,GAAqC,KAAKD,KAAL,CAAWC,iBAAhD;AACH;AACJ;AACJ;;;2CACsB;AACnB;;AACA,UAAI,KAAKH,WAAT,EAAsB;AAClB,aAAKA,WAAL,CAAiBK,OAAjB;AACH;AACJ;;;0CACqBH,K,EAAOI,K,EAAO;AAChC,aAAQf,cAAc,CAAC,KAAKW,KAAN,EAAaA,KAAb,CAAd,IAAqCX,cAAc,CAAC,KAAKe,KAAN,EAAaA,KAAb,CAA3D;AACH;;;gCACWJ,K,EAAO;AACf,aAAQ,eAAE,KAAF,EAASK,MAAM,CAACC,MAAP,CAAc;AAAE,qBAAa,WAAf;AAA4B,uBAAe,MAA3C;AAAmD,uBAAe,MAAlE;AAA0EC,QAAAA,GAAG,EAAE,KAAKC;AAApF,OAAd,EAAmHR,KAAnH,CAAT,EACJ,eAAE,KAAF,EAAS;AAAES,QAAAA,SAAS,EAAE;AAAb,OAAT,CADI,EAEJ,eAAE,KAAF,EAAS;AAAEA,QAAAA,SAAS,EAAE;AAAb,OAAT,EACI,eAAE,QAAF,EAAY;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBD,QAAAA,SAAS,EAAE;AAA7B,OAAZ,CADJ,CAFI,CAAR;AAIH;;;EAjCyBE,2B;;;eAmCflB,Q","sourcesContent":["import { MDCSnackbar } from '@material/snackbar/';\nimport { h } from 'preact';\nimport MaterialComponent from '../Base/MaterialComponent';\n// TODO: Is that needed?\nfunction shallowDiffers(a, b) {\n    for (const i in a) {\n        if (!(i in b)) {\n            return true;\n        }\n    }\n    for (const i in b) {\n        // noinspection JSUnfilteredForInLoop\n        if (a[i] !== b[i]) {\n            return true;\n        }\n    }\n    return false;\n}\nexport class Snackbar extends MaterialComponent {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'snackbar';\n        this.mdcProps = [];\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        if (this.control) {\n            this.MDComponent = new MDCSnackbar(this.control);\n            if (this.props.dismissesOnAction === undefined ||\n                this.props.dismissesOnAction === null) {\n                this.MDComponent.dismissesOnAction = true;\n            }\n            else {\n                this.MDComponent.dismissesOnAction = this.props.dismissesOnAction;\n            }\n        }\n    }\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        if (this.MDComponent) {\n            this.MDComponent.destroy();\n        }\n    }\n    shouldComponentUpdate(props, state) {\n        return (shallowDiffers(this.props, props) || shallowDiffers(this.state, state));\n    }\n    materialDom(props) {\n        return (h(\"div\", Object.assign({ \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", \"aria-hidden\": \"true\", ref: this.setControlRef }, props),\n            h(\"div\", { className: \"mdc-snackbar__text\" }),\n            h(\"div\", { className: \"mdc-snackbar__action-wrapper\" },\n                h(\"button\", { type: \"button\", className: \"mdc-snackbar__action-button\" }))));\n    }\n}\nexport default Snackbar;\n//# sourceMappingURL=index.js.map"],"file":"index.js"}