{"version":3,"sources":["../esm/Button/index.js"],"names":["ButtonIcon","arguments","componentName","Icon","Button","mdcProps","themeProps","props","ButtonElement","href","className","forEach","themeProp","Object","assign","ref","setControlRef","children","MaterialComponent","default_1"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IACaA,U;;;;;AACT,wBAAc;AAAA;;AAAA;AACV,iHAASC,SAAT;AACA,UAAKC,aAAL,GAAqB,cAArB;AAFU;AAGb;;;EAJ2BC,c;;;;IAMnBC,M;;;;;AACT,oBAAc;AAAA;;AAAA;AACV,8GAASH,SAAT;AACA,WAAKC,aAAL,GAAqB,QAArB;AACA,WAAKG,QAAL,GAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,YAApB,EAAkC,UAAlC,CAAhB;AACA,WAAKC,UAAL,GAAkB,CAAC,SAAD,EAAY,WAAZ,CAAlB;AAJU;AAKb;;;;gCACWC,K,EAAO;AACf,UAAMC,aAAa,GAAGD,KAAK,CAACE,IAAN,GAAa,GAAb,GAAmB,QAAzC;AACA,UAAIC,SAAS,GAAG,EAAhB;AACA,WAAKJ,UAAL,CAAgBK,OAAhB,CAAwB,UAAAC,SAAS,EAAI;AACjC,YAAIA,SAAS,IAAIL,KAAb,IAAsBA,KAAK,CAACK,SAAD,CAAL,KAAqB,KAA/C,EAAsD;AAClDF,UAAAA,SAAS,IAAI,iCAAmBE,SAAnB,IAAgC,GAA7C;AACH;AACJ,OAJD;AAKA,aAAQ,eAAEJ,aAAF,EAAiBK,MAAM,CAACC,MAAP,CAAc;AAAEC,QAAAA,GAAG,EAAE,KAAKC;AAAZ,OAAd,EAA2CT,KAA3C,EAAkD;AAAEG,QAAAA,SAAS,EAAEA;AAAb,OAAlD,CAAjB,EAA8F,KAAKH,KAAL,CAAWU,QAAzG,CAAR;AACH;;;EAhBuBC,2B;;;;IAkBPC,S;;;;;;;;;;;EAAkBf,M;;;AAEvCe,SAAS,CAAChB,IAAV,GAAiBH,UAAjB","sourcesContent":["import { h } from 'preact';\nimport MaterialComponent from '../Base/MaterialComponent';\nimport Icon from '../Icon';\nimport generateThemeClass from '../themeUtils/generateThemeClass';\nexport class ButtonIcon extends Icon {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'button__icon';\n    }\n}\nexport class Button extends MaterialComponent {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'button';\n        this.mdcProps = ['dense', 'raised', 'unelevated', 'outlined'];\n        this.themeProps = ['primary', 'secondary'];\n    }\n    materialDom(props) {\n        const ButtonElement = props.href ? 'a' : 'button';\n        let className = '';\n        this.themeProps.forEach(themeProp => {\n            if (themeProp in props && props[themeProp] !== false) {\n                className += generateThemeClass(themeProp) + ' ';\n            }\n        });\n        return (h(ButtonElement, Object.assign({ ref: this.setControlRef }, props, { className: className }), this.props.children));\n    }\n}\nexport default class default_1 extends Button {\n}\ndefault_1.Icon = ButtonIcon;\n//# sourceMappingURL=index.js.map"],"file":"index.js"}